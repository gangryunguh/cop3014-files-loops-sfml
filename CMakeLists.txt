cmake_minimum_required(VERSION 3.10)
project(Loops)

message("CMAKE_SYSTEM_NAME::${CMAKE_SYSTEM_NAME}")

if (NOT WIN32)
    set(CMAKE_CXX_STANDARD 11)
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -static")
    set(CMAKE_CXX_STANDARD 11)
endif()

set(SOURCE_FILES app/sin.cpp app/cos.cpp app/exp.cpp app/draw_map.cpp)

add_executable(sin.exe app/sin.cpp)
add_executable(cos.exe app/cos.cpp)
add_executable(exp.exe app/exp.cpp)
add_executable(draw_sin.exe app/draw_sin.cpp)
add_executable(draw_map.exe app/draw_map.cpp)

if (NOT WIN32)
    set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake_modules")
    find_package(SFML REQUIRED system window graphics network audio)
    if (SFML_FOUND)
        include_directories(${SFML_INCLUDE_DIR})
        target_link_libraries(draw_sin.exe ${SFML_LIBRARIES})
        target_link_libraries(draw_map.exe ${SFML_LIBRARIES})
    endif()
else()
    set(SFML_STATIC_LIBRARIES TRUE)
    set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake_modules")
    find_package(SFML 2 REQUIRED COMPONENTS audio graphics window system)
    if (SFML_FOUND)
        include_directories(${SFML_INCLUDE_DIR})
        target_link_libraries(draw_sin.exe ${SFML_LIBRARIES})
        target_link_libraries(draw_map.exe ${SFML_LIBRARIES})
    endif ()
endif()
